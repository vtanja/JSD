/// Generated from {{ self._TemplateReference__context.name | get_template_name_from_path }} by SBAG (https://github.com/vtanja/JSD)
/// on {{ date }}

import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { environment } from 'src/environments/environment';

{% set entity_name = entity.name | lower %}
{% set interface_name = 'I' + (entity.name) %}
{% set service_name = (entity.name) + 'Service' %}
{% set entity_id = (entity.name | lower) + 'Id' %}
{% set entity_plural = entity.name | plural %}
{% set selectLists = 'ISelectLists' %}

import { {{interface_name}} } from 'src/app/shared/model/{{entity_name}}.model';
{% for property in entity | get_unique_properties %}
import { I{{ property }} } from 'src/app/shared/model/{{property | lower}}.model';
{% endfor %}

interface {{ selectLists }} {
{% for property in entity.properties %}
{% if property | get_property_type != 'base' %}
	{{ property.name }}List: I{{ property.ptype }}[],
{% endif %}
{% endfor %}
}

@Injectable({
  providedIn: 'root'
})
export class {{service_name}} {
 
  constructor(private http: HttpClient) { }

  get{{entity_plural}}Count(){
    return this.http.get<number>(environment.api + '/{{entity_name}}/count');
  }

  get{{entity_plural}}(pageNo:number, pageSize:number){
    return this.http.get<{{interface_name}}[]>(environment.api + '/{{entity_name}}/'+pageNo+'/'+pageSize);
  }

  get{{entity.name}}({{entity_id}}: number) {
    return this.http.get<{{interface_name}}>(environment.api + '/{{entity_name}}/' + {{entity_id}});
  }

  update{{entity.name}}({{entity_id}}: number, {{entity_name}}: {{interface_name}}) {
    return this.http.put<{{interface_name}}>(environment.api + '/{{entity_name}}/' + {{entity_id}}, {{entity_name}});
  }
  
  create{{entity.name}}({{entity_name}}: {{interface_name}}) {
    return this.http.post(environment.api + '/{{entity_name}}', {{entity_name}});
  }

  delete{{entity.name}}({{entity_id}}: number) {
    return this.http.delete(environment.api + '/{{entity_name}}/' + {{entity_id}});
  }

  getLists() {
    return this.http.get<{{ selectLists }}>(environment.api + '/{{entity_name}}/lists');
  }

}