package com.example.{{ app }}.controller;

import org.springframework.web.bind.annotation.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.beans.factory.annotation.Autowired;
import lombok.extern.slf4j.Slf4j;
import java.util.List;
import com.example.{{ app }}.dto.{{entity.name}}DTO;
import com.example.{{ app }}.service.{{entity.name}}Service;


@CrossOrigin
@RestController
@Slf4j
@RequestMapping( path = "/{{ entity.name | lower }}")
public class {{ entity.name | capitalize }}Controller {
    private final {{ entity.name }}Service {{ entity.name | lower }}Service;

    @Autowired
    public {{ entity.name | capitalize }}Controller({{ entity.name }}Service service){
        this.{{ entity.name | lower }}Service = service;
    }

    @GetMapping()
    public ResponseEntity<List<{{ entity.name }}DTO>> getAll{{ entity.name | plural }}() {

        return {{ entity.name | lower }}Service.get{{entity.name | plural}}();
    }

    @GetMapping(path="/{id}")
    public ResponseEntity<{{ entity.name }}DTO> get{{ entity.name }}(@PathVariable Long id) {

        return {{ entity.name | lower }}Service.get{{entity.name}}(id);
    }

    @PostMapping()
    public ResponseEntity<{{ entity.name }}DTO> create(@RequestBody {{ entity.name }}DTO {{entity.name | lower}}Dto) {
        return {{ entity.name | lower }}Service.create({{entity.name | lower}}Dto);
    }

    @PutMapping(path = "/{id}")
    public ResponseEntity<{{ entity.name }}DTO> update(@PathVariable Long id, @RequestBody {{ entity.name }}DTO {{entity.name | lower }}Dto) {
        return {{ entity.name | lower }}Service.update{{ entity.name }}(id, {{ entity.name | lower }}Dto);
    }

    @DeleteMapping(path = "/{id}")
    public ResponseEntity<?> delete(@PathVariable Long id) {
        return {{ entity.name | lower }}Service.delete{{ entity.name }}(id);
    }

}