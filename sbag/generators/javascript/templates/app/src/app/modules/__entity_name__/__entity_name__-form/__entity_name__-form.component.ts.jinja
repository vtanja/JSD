{% set entity_name = entity.name | lower %}
import { Component } from '@angular/core';
import { FormBuilder, FormControl, FormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { I{{entity.name}} } from 'src/app/shared/model/{{entity_name}}.model';
import { {{entity.name}}Service } from '../{{entity_name}}.service';

@Component({
	selector: 'app-{{entity_name}}-form',
	templateUrl: './{{entity_name}}-form.component.html',
	styleUrls: ['./{{entity_name}}-form.component.css'],
})

export class {{entity.name}}FormComponent {
	
	update: boolean;
	id: number | undefined;
	entity: I{{ entity.name }} | undefined;
	form: FormGroup = new FormGroup({});

    constructor(private service: {{entity.name}}Service, private router: Router, private activatedRoute: ActivatedRoute, private fb: FormBuilder){
		this.form = this.fb.group({
			{% for property in entity.properties %}
			'{{ property.name }}': new FormControl(),
    		{% endfor %}
        });

		if(this.router.url.includes('update')){
			this.update = true;
			this.id = Number(this.activatedRoute.snapshot.paramMap.get('id'));
			this.service.get{{entity.name}}(this.id).subscribe(
      			(res: any) => {
					this.entity = res;
					this.form.setValue({
					{% for property in entity.properties %}
						{{property.name}}: this.entity?.{{property.name}},
					{% endfor %}
					})
				},
				(err: any) => {
					alert("error");
					console.log(err);
				}
			);
		}
		else {
			this.update = false;
		}
	}

	Submit() {
		{% for property in entity.properties %}
		let {{property.name}}Value = this.form.get('{{property.name}}')?.value
		{% endfor %}
		let dto: I{{entity.name}} = {
			{% for property in entity.properties %}
			{{property.name}}: {{property.name}}Value,
			{% endfor %}
		}
		console.log(dto)
		this.service.create{{entity.name}}(dto).subscribe(
		(res) => {
			alert('created');
			this.form.reset()
		},
		(err) => {
			alert(err.message);
			console.log(err);
		});
	}
}
